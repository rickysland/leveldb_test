cmake_minimum_required(VERSION 3.5)
add_definitions(-DLEVELDB_PLATFORM_POSIX)
add_definitions("-g -std=gnu++11")
project(test_leveldb)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/output/")

include_directories (./leveldb/include)
add_subdirectory(leveldb)
add_executable(test_leveldb test_level.cpp)
find_package (Threads)
target_link_libraries(test_leveldb leveld)
target_link_libraries(test_leveldb ${CMAKE_THREAD_LIBS_INIT})

function(assign_source_group)
	foreach(_source IN ITEMS ${ARGN})
		if (IS_ABSOLUTE "${_source}")
			file(RELATIVE_PATH _source_rel "${CMAKE_CURRENT_SOURCE_DIR}" "${_source}")
		else()
			set(_source_rel "${_source}")
		endif()
		get_filename_component(_source_path "${_source_rel}" PATH)
		string(REPLACE "/" "\\" _source_path_msvc "${_source_path}")
		source_group("${_source_path_msvc}" FILES "${_source}")
	endforeach()
endfunction(assign_source_group)
assign_source_group(${SOURCE_FILES})
